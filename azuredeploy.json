{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "The name of the Administrator of the new VMs and Domain"
			}
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "Password for administrator accounts and domain join"
			}
		},
		"sqlServerServiceAccountPassword": {
			"type": "securestring",
			"metadata": {
				"description": "Password for SQL accounts"
			}
		},
		"environmentPrefix": {
			"type": "string",
			"metadata": {
				"description": "Prefix for environement (production or staging). You can change the allowed values based on your preference."
			},
      "maxLength": 4,
			"defaultValue": ""
		},
		"numberOfWebInstances": {
			"type": "int",
			"defaultValue": 2,
			"minValue": 2,
			"maxValue": 5
		},
		"adVMSize": {
			"type": "string",
			"allowedValues": [
				"Standard_D1_v2",
				"Standard_D2_v2",
				"Standard_D3_v2",
				"Standard_D4_v2",
				"Standard_D5_v2",
				"Standard_D11_v2",
				"Standard_D12_v2",
				"Standard_D13_v2",
				"Standard_D14_v2",
				"Standard_D15_v2",
				"Standard_D1",
				"Standard_D2",
				"Standard_D3",
				"Standard_D4",
				"Standard_D11",
				"Standard_D12",
				"Standard_D13",
				"Standard_D14",
				"Standard_DS1",
				"Standard_DS2",
				"Standard_DS3",
				"Standard_DS4",
				"Standard_DS11",
				"Standard_DS12",
				"Standard_DS13",
				"Standard_DS14",
				"Standard_DS1_v2",
				"Standard_DS2_v2",
				"Standard_DS3_v2",
				"Standard_DS4_v2",
				"Standard_DS5_v2",
				"Standard_DS11_v2",
				"Standard_DS12_v2",
				"Standard_DS13_v2",
				"Standard_DS14_v2",
				"Standard_DS15_v2",
				"Standard_GS1",
				"Standard_GS2",
				"Standard_GS3",
				"Standard_GS4",
				"Standard_GS4",
				"Standard_GS5"
			],
			"metadata": {
				"description": "The size of the AD VMs Created"
			},
			"defaultValue": "Standard_D1_v2"
		},
		"sqlVMSize": {
			"type": "string",
			"allowedValues": [
				"Standard_DS1",
				"Standard_DS2",
				"Standard_D2_v2",
				"Standard_DS3",
				"Standard_DS4",
				"Standard_DS11",
				"Standard_DS12",
				"Standard_DS13",
				"Standard_DS14",
				"Standard_DS1_v2",
				"Standard_DS2_v2",
				"Standard_DS3_v2",
				"Standard_DS4_v2",
				"Standard_DS5_v2",
				"Standard_DS11_v2",
				"Standard_DS12_v2",
				"Standard_DS13_v2",
				"Standard_DS14_v2",
				"Standard_DS15_v2",
				"Standard_GS1",
				"Standard_GS2",
				"Standard_GS3",
				"Standard_GS4",
				"Standard_GS4",
				"Standard_GS5"
			],
			"metadata": {
				"description": "The size of the SQL VMs Created"
			},
			"defaultValue": "Standard_D2_v2"
		},
		"webVMSize": {
			"type": "string",
			"allowedValues": [
				"Standard_DS1",
				"Standard_DS2",
				"Standard_DS3",
				"Standard_DS4",
				"Standard_D2_v2",
				"Standard_DS11",
				"Standard_DS12",
				"Standard_DS13",
				"Standard_DS14",
				"Standard_DS1_v2",
				"Standard_DS2_v2",
				"Standard_DS3_v2",
				"Standard_DS4_v2",
				"Standard_DS5_v2",
				"Standard_DS11_v2",
				"Standard_DS12_v2",
				"Standard_DS13_v2",
				"Standard_DS14_v2",
				"Standard_DS15_v2",
				"Standard_GS1",
				"Standard_GS2",
				"Standard_GS3",
				"Standard_GS4",
				"Standard_GS4",
				"Standard_GS5"
			],
			"metadata": {
				"description": "The size of the SQL VMs Created"
			},
			"defaultValue": "Standard_D2_v2"
		},
		"mgtVMSize": {
			"type": "string",
			"allowedValues": [
				"Standard_DS1",
				"Standard_D1_v2",
				"Standard_DS2",
				"Standard_DS3",
				"Standard_DS4",
				"Standard_DS11",
				"Standard_DS12",
				"Standard_DS13",
				"Standard_DS14",
				"Standard_DS1_v2",
				"Standard_DS2_v2",
				"Standard_DS3_v2",
				"Standard_DS4_v2",
				"Standard_DS5_v2",
				"Standard_DS11_v2",
				"Standard_DS12_v2",
				"Standard_DS13_v2",
				"Standard_DS14_v2",
				"Standard_DS15_v2",
				"Standard_GS1",
				"Standard_GS2",
				"Standard_GS3",
				"Standard_GS4",
				"Standard_GS4",
				"Standard_GS5"
			],
			"metadata": {
				"description": "The size of the SQL VMs Created"
			},
			"defaultValue": "Standard_D1_v2"
		},
		"witnessVMSize": {
			"type": "string",
			"allowedValues": [
				"Standard_DS1",
				"Standard_DS2",
				"Standard_D1_v2",
				"Standard_DS3",
				"Standard_DS4",
				"Standard_DS11",
				"Standard_DS12",
				"Standard_DS13",
				"Standard_DS14",
				"Standard_DS1_v2",
				"Standard_DS2_v2",
				"Standard_DS3_v2",
				"Standard_DS4_v2",
				"Standard_DS5_v2",
				"Standard_DS11_v2",
				"Standard_DS12_v2",
				"Standard_DS13_v2",
				"Standard_DS14_v2",
				"Standard_DS15_v2",
				"Standard_GS1",
				"Standard_GS2",
				"Standard_GS3",
				"Standard_GS4",
				"Standard_GS4",
				"Standard_GS5"
			],
			"metadata": {
				"description": "The size of the Witness VM Created"
			},
			"defaultValue": "Standard_D1_v2"
		},
		"domainName": {
			"type": "string",
			"metadata": {
				"description": "The FQDN of the AD Domain created "
			},
			"defaultValue": "contoso.local"
		},
		"sqlServerServiceAccountUserName": {
			"type": "string",
			"metadata": {
				"description": "The SQL Server Service Account name"
			},
			"defaultValue": "sqlservice"
		},
		"sqlStorageAccountType": {
			"type": "string",
			"allowedValues": [
				"Premium_LRS",
				"Standard_LRS"
			],
			"metadata": {
				"description": "The type of the Sql Server Storage Account created"
			},
			"defaultValue": "Standard_LRS"
		},
		"dcStorageAccountType": {
			"type": "string",
			"allowedValues": [
				"Standard_LRS",
				"Standard_GRS",
				"Standard_RAGRS",
				"Premium_LRS"
			],
			"metadata": {
				"description": "The type of the DC Storage Account created"
			},
			"defaultValue": "Standard_LRS"
		},
		"webStorageAccountType": {
			"type": "string",
			"allowedValues": [
				"Standard_LRS",
				"Standard_GRS",
				"Standard_RAGRS",
				"Premium_LRS"
			],
			"metadata": {
				"description": "The type of the DC Storage Account created"
			},
			"defaultValue": "Standard_LRS"
		},
		"mgtStorageAccountType": {
			"type": "string",
			"allowedValues": [
				"Standard_LRS",
				"Standard_GRS",
				"Standard_RAGRS",
				"Premium_LRS"
			],
			"metadata": {
				"description": "The type of the DC Storage Account created"
			},
			"defaultValue": "Standard_LRS"
		},
		"virtualNetworkAddressRange": {
			"type": "string",
			"metadata": {
				"description": "The address range of the new VNET in CIDR format"
			},
			"defaultValue": "10.200.0.0/16"
		},
		"sqlSubnet": {
			"type": "object",
			"metadata": {
				"description": "The address range of the subnet static IPs are allocated from in the new VNET"
			},
			"defaultValue": {
				"name": "sql",
				"properties": {
					"addressPrefix": "10.200.1.0/24"
				}
			}
		},
		"webSubnet": {
			"type": "object",
			"metadata": {
				"description": "The address range of the SQL subnet created in the new VNET"
			},
			"defaultValue": {
				"name": "web",
				"properties": {
					"addressPrefix": "10.200.2.0/24"
				}
			}
		},
		"dcSubnet": {
			"type": "object",
			"metadata": {
				"description": "The address range of the SQL subnet created in the new VNET"
			},
			"defaultValue": {
				"name": "dc",
				"properties": {
					"addressPrefix": "10.200.0.0/24"
				}
			}
		},
		"mgtSubnet": {
			"type": "object",
			"metadata": {
				"description": "The address range of the SQL subnet created in the new VNET"
			},
			"defaultValue": {
				"name": "mgt",
				"properties": {
					"addressPrefix": "10.200.3.0/24"
				}
			}
		},
		"sqlLBIPAddress": {
			"type": "string",
			"metadata": {
				"description": "The IP address of the new SQL Server Internal Load Balancer"
			},
			"defaultValue": "10.200.1.5"
		},
		"sql0IPAddress": {
			"type": "string",
			"defaultValue": "10.200.1.6"
		},
		"sql1IPAddress": {
			"type": "string",
			"defaultValue": "10.200.1.7"
		},
		"sqlwIPAddress": {
			"type": "string",
			"defaultValue": "10.200.1.8"
		},
		"adPDCNICIPAddress": {
			"type": "string",
			"metadata": {
				"description": "The IP address of the new AD VM"
			},
			"defaultValue": "10.200.0.5"
		},
		"adBDCNICIPAddress": {
			"type": "string",
			"metadata": {
				"description": "The IP address of the new backup AD VM"
			},
			"defaultValue": "10.200.0.6"
		},
		"webIPAddresses": {
			"type": "array",
			"metadata": {
				"description": "The IP address of the new backup AD VM"
			},
			"defaultValue": [{"IpAddress": "10.200.2.5"}, {"IpAddress": "10.200.2.6"}]
		},
		"mgtIPAddress": {
			"type": "string",
			"metadata": {
				"description": "The IP address of the new backup AD VM"
			},
			"defaultValue": "10.200.3.5"
		},
		"deploymentPrefix": {
			"type": "string",
			"metadata": {
				"description": "The DNS Prefix for the Public IP Address for the Always On Cluster"
			},
			"defaultValue": "aodns"
		},
		"virtualNetworkName": {
			"type": "string",
			"metadata": {
				"description": "Name of virtual network to be created"
			},
			"defaultValue": "autohav2VNET"
		},
		"templatesBaseUrl": {
			"type": "string",
			"metadata": {
				"description": "Linked Templates base url"
			},
			"defaultValue": "https://raw.githubusercontent.com/davoodharun/azure-blueprint/master/nestedtemplates"
		},
		"scriptsBaseUrl": {
			"type": "string",
			"metadata": {
				"description": "DSC Scripts base url"
			},
			"defaultValue": "https://raw.githubusercontent.com/davoodharun/azure-blueprint/master/DSC"
		},
		"sqlServerVersion": {
			"type": "string",
			"allowedValues": [
				"SQL2012SP3-WS2012R2",
				"SQL2014SP1-WS2012R2",
				"SQL2016-WS2012R2"
			],
			"metadata": {
				"description": "The Sql Server Version"
			},
			"defaultValue": "SQL2016-WS2012R2"
		},
		"numberOfSqlVMDisks": {
			"type": "string",
			"allowedValues": [
				"1",
				"2",
				"3",
				"4"
			],
			"metadata": {
				"description": "The Sql VM Disk Size"
			},
			"defaultValue": "2"
		}
	},
	"variables": {
		"lbSettings": {
			"rdpLBFEName": "rdpLBFE",
			"sqlLBFEName": "sqlLBFE",
			"adLBBEName": "adLBBE",
			"sqlLBBEName": "sqlLBBE",
			"rdpLBName": "rdpLoadBalancer",
			"sqlLBName": "sqlLoadBalancer"
		},
		"numberOfWebInstances": "[length(parameters('webIPAddresses'))]",
		"staticIPWEBStart": 5,
		"RDPNAT": "RDP",
		"SQLAOProbe": "SQLAlwaysOnEndPointProbe",
		"vmSettings": {
      "dc": {
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "imageSKU": "2016-Datacenter"
      },
      "sql": {
        "imagePublisher": "MicrosoftSQLServer",
        "imageOffer": "[parameters('sqlServerVersion')]",
        "imageSKU": "Enterprise",
        "autoPatchingEnable": true,
        "autoPatchingDay": "Sunday",
        "autoPatchingStartHour": "2",
        "sqlAOListenerPort": "1433",
        "sqlAOAGName": "alwayson-ag",
        "workloadType": "GENERAL",
        "sqlAOListenerName":"alwayson-ag-listener",
        "sqlAOEPName": "[concat(parameters('deploymentPrefix'),'-hadr')]",
    		"sharePath": "[concat(parameters('deploymentPrefix'),'-fsw')]",
    		"clusterName": "[concat(parameters('deploymentPrefix'),'-fc')]",
      },
      "sqlw": {
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "imageSKU": "2016-Datacenter"
      },
      "web": {
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "imageSKU": "2016-Datacenter",
        "numberOfWebInstances": "[length(parameters('webIPAddresses'))]",
    		"staticIPWEBStart": 5,
      },
      "mgt": {
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "imageSKU": "2016-Datacenter"
      },
			"vmContainerName": "vhds"
		},
		"VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkNameWithSuffix'))]",
		"derivedIds": {
			"dcSubnet": "[concat(variables('VnetID'),'/subnets/', parameters('dcSubnet').name)]",
			"sqlSubnet": "[concat(variables('VnetID'),'/subnets/', parameters('sqlSubnet').name)]",
			"webSubnet": "[concat(variables('VnetID'),'/subnets/', parameters('webSubnet').name)]",
			"mgtSubnet": "[concat(variables('VnetID'),'/subnets/', parameters('mgtSubnet').name)]",
			"dcNSG": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('resourceNames').nsgs.dc)]",
			"sqlNSG": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('resourceNames').nsgs.sql)]",
			"webNSG": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('resourceNames').nsgs.web)]",
			"lbNSG": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('resourceNames').nsgs.lb)]",
			"mgtNSG": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('resourceNames').nsgs.mgt)]",
			"adIPConfigID": "[concat(resourceId('Microsoft.Network/networkInterfaces',variables('resourceNames').nics.adpdc),'/ipConfigurations/ipconfig1')]",
			"rdplbFEConfigID": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').rdpLBName),'/frontendIPConfigurations/',variables('lbSettings').rdpLBFEName)]",
			"adRDPNATRuleID": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').rdpLBName),'/inboundNatRules/',variables('RDPNAT'))]",
			"adBEAddressPoolID": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').rdpLBName),'/backendAddressPools/',variables('lbSettings').adLBBEName)]",
			"sqlBEAddressPoolID": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').sqlLBName),'/backendAddressPools/',variables('lbSettings').sqlLBBEName)]",
			"sqllbFEConfigID": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').sqlLBName),'/frontendIPConfigurations/',variables('lbSettings').sqlLBFEName)]",
			"sqllbProbeID": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').sqlLBName),'/probes/',variables('SQLAOProbe'))]"
		},
		"subnets": [
			"[parameters('sqlSubnet')]",
			"[parameters('dcSubnet')]",
			"[parameters('webSubnet')]",
			"[parameters('mgtSubnet')]"
		],
		"virtualNetworkNameWithSuffix": "[concat(parameters('virtualNetworkName'), uniqueString(resourceGroup().id))]",
		"resourceNames": {
      "virtualNetworkNameWithSuffix": "[concat(parameters('virtualNetworkName'), uniqueString(resourceGroup().id))]",
			"nsgs": {
				"mgt": "[concat('MGTNSG', parameters('environmentPrefix'))]",
				"dc": "[concat('DCNSG', parameters('environmentPrefix'))]",
				"web": "[concat('WEBNSG', parameters('environmentPrefix'))]",
				"sql": "[concat('SQLNSG', parameters('environmentPrefix'))]",
				"lb": "[concat('LBNSG', parameters('environmentPrefix'))]"
			},
			"storageAccounts": {
				"sql": "[concat(uniqueString(resourceGroup().id), 'sql', parameters('environmentPrefix'))]",
				"dc": "[concat(uniqueString(resourceGroup().id), 'dc', parameters('environmentPrefix'))]",
				"web": "[concat(uniqueString(resourceGroup().id), 'web', parameters('environmentPrefix'))]",
				"mgt": "[concat(uniqueString(resourceGroup().id), 'mgt', parameters('environmentPrefix'))]"
			},
			"vms": {
				"adpdc": "[concat('AZ-PDC-VM', parameters('environmentPrefix'))]",
				"adbdc": "[concat('AZ-BDC-VM', parameters('environmentPrefix'))]",
				"sql": "[concat(parameters('environmentPrefix'), 'sqlserver-')]",
				"sqlw": "[concat('cluster-fsw', parameters('environmentPrefix'))]",
				"web": "[concat('AZ-WEB-VM', parameters('environmentPrefix'))]",
				"mgt": "[concat('AZ-MGT-VM', parameters('environmentPrefix'))]"
			},
			"nics": {
				"adpdc": "[concat('adPDC-nic', parameters('environmentPrefix'))]",
				"adbdc": "[concat('adBDC-nic', parameters('environmentPrefix'))]",
				"sqlw": "[concat('sqlw-nic', parameters('environmentPrefix'))]",
				"sql0": "[concat('sql0-nic', parameters('environmentPrefix'))]",
        "sql1": "[concat('sql1-nic', parameters('environmentPrefix'))]",
				"web": "[concat('WEB-nic', parameters('environmentPrefix'))]",
				"mgt": "[concat('MGT-nic', parameters('environmentPrefix'))]"
			},
			"loadBalancers": {
				"rdpLBFEName": "rdpLBFE",
				"sqlLBFEName": "sqlLBFE",
				"adLBBEName": "adLBBE",
				"sqlLBBEName": "sqlLBBE",
				"rdpLBName": "rdpLoadBalancer",
				"sqlLBName": "sqlLoadBalancer"
			},
			"availabilitySets": {
				"sql": "[concat('sqlAvailabilitySet', parameters('environmentPrefix'))]",
				"ad": "[concat('adAvailabilitySet', parameters('environmentPrefix'))]",
				"web": "[concat('webAvailabilitySet', parameters('environmentPrefix'))]"
			}
		},
    "artifacts": {
      "vnetwithDNSTemplateURL": "[concat(parameters('templatesBaseUrl'),'/updateVnetWithDNS.json')]",
      "nicTemplateURL": "[concat(parameters('templatesBaseUrl'),'/updateNic.json')]",
      "sqlLoadBalancerURL": "[concat(parameters('templatesBaseUrl'),'/sqlLoadBalancer.json')]",
      "applicationGatewayURL": "[concat(parameters('templatesBaseUrl'),'/provisioningApplicationGateway.json')]",
      "provisioningNICsSQLADURL": "[concat(parameters('templatesBaseUrl'),'/provisioningNICsSQLAD.json')]",
      "virtualNetworkNSGURL": "[concat(parameters('templatesBaseUrl'),'/virtualNetworkNSG.json')]",
      "provisioningVMsSQLADURL": "[concat(parameters('templatesBaseUrl'),'/provisioningVMsSQLAD.json')]",
      "provisioningAppVMsURL": "[concat(parameters('templatesBaseUrl'),'/provisioningAppVMs.json')]",
      "provisioningRCV": "[concat('https://raw.githubusercontent.com/AppliedIS/azure-blueprint/BackupVault/nestedtemplates','/recoveryServicesVault.json')]",
      "configuringBackupADVMURL": "[concat(parameters('templatesBaseUrl'),'/configuringBackupADVM.json')]",
      "preparingAlwaysOnSqlServerURL": "[concat(parameters('templatesBaseUrl'),'/preparingSqlServer.json')]",
      "configuringAlwaysOnURL": "[concat(parameters('templatesBaseUrl'),'/configuringAlwaysOn.json')]",
      "adPDCModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateADPDC.ps1.zip')]",
      "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
      "adBDCModulesURL": "[concat(parameters('scriptsBaseUrl'),'/PrepareADBDC.ps1.zip')]",
      "adBDCConfigurationFunction": "PrepareADBDC.ps1\\PrepareADBDC",
      "fswModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateFileShareWitness.ps1.zip')]",
      "fswConfigurationFunction": "CreateFileShareWitness.ps1\\CreateFileShareWitness",
      "sqlAOPrepareModulesURL": "[concat(parameters('scriptsBaseUrl'),'/PrepareAlwaysOnSqlServer.ps1.zip')]",
      "sqlAOPrepareConfigurationFunction": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
      "createClusterModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateFailoverCluster.ps1.zip')]",
      "createClusterConfigurationFunction": "CreateFailoverCluster.ps1\\CreateFailoverCluster",
      "iisModulesURL": "[concat(parameters('scriptsBaseUrl'),'/ContosoWebsite.ps1.zip')]",
      "iisConfigurationFunction": "ContosoWebsite.ps1\\ContosoWebsite"
    }
	},
  "resources": [
    {
      "name": "VirtualNetworkNSG",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "This resource will create storage accounts for Active Directory, SQL Server, File Share Witness and Diagnostics. It will also create the Virtual Network and public IP addresses",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('artifacts').virtualNetworkNSGURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkNameWithSuffix')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "dcNSGName": {
            "value": "[variables('resourceNames').nsgs.dc]"
          },
          "sqlNSGName": {
            "value": "[variables('resourceNames').nsgs.sql]"
          },
          "webNSGName": {
            "value": "[variables('resourceNames').nsgs.web]"
          },
          "mgtNSGName": {
            "value": "[variables('resourceNames').nsgs.mgt]"
          },
          "lbNSGName": {
            "value": "[variables('resourceNames').nsgs.lb]"
          }
        }
      }
    },
    {
      "name": "SQLLoadBalancer",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "Create Load Balancers for SQL and DC",
      "dependsOn": [
        "Microsoft.Resources/deployments/VirtualNetworkNSG"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('artifacts').sqlLoadBalancerURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "sqlLBName": {
            "value": "[variables('lbSettings').sqlLBName]"
          },
          "sqlLBFEName": {
            "value": "[variables('lbSettings').sqlLBFEName]"
          },
          "sqlLBIPAddress": {
            "value": "[parameters('sqlLBIPAddress')]"
          },
          "sqlSubnetRef": {
            "value": "[variables('derivedIds').sqlSubnet]"
          },
          "sqlLBBEName": {
            "value": "[variables('lbSettings').sqlLBBEName]"
          },
          "sqlLBBEID": {
            "value": "[variables('derivedIds').sqlBEAddressPoolID]"
          },
          "sqllbFEConfigID": {
            "value": "[variables('derivedIds').sqllbFEConfigID]"
          },
          "sqllbProbeID": {
            "value": "[variables('derivedIds').sqllbProbeID]"
          },
          "SQLAOProbe": {
            "value": "[variables('SQLAOProbe')]"
          }
        }
      }
    },
    {
      "name": "ProvisioningNICsSQLADMGT",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SQLLoadBalancer"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('artifacts').provisioningNICsSQLADURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adPDCNicName": {
            "value": "[variables('resourceNames').nics.adpdc]"
          },
          "adPDCNICIPAddress": {
            "value": "[parameters('adPDCNICIPAddress')]"
          },
          "sqlSubnetRef": {
            "value": "[variables('derivedIds').sqlSubnet]"
          },
          "dcSubnetRef": {
            "value": "[variables('derivedIds').dcSubnet]"
          },
          "mgtSubnetRef": {
            "value": "[variables('derivedIds').mgtSubnet]"
          },
          "adBEAddressPoolID": {
            "value": "[variables('derivedIds').adBEAddressPoolID]"
          },
          "adRDPNATRuleID": {
            "value": "[variables('derivedIds').adRDPNATRuleID]"
          },
          "adBDCNicName": {
            "value": "[variables('resourceNames').nics.adbdc]"
          },
          "adBDCNICIPAddress": {
            "value": "[parameters('adBDCNICIPAddress')]"
          },
          "sqlBEAddressPoolID": {
            "value": "[variables('derivedIds').sqlBEAddressPoolID]"
          },
          "sqlwNicName": {
            "value": "[variables('resourceNames').nics.sqlw]"
          },
          "sql0NicName": {
            "value": "[variables('resourceNames').nics.sql0]"
          },
          "sql1NicName": {
            "value": "[variables('resourceNames').nics.sql1]"
          },
          "sql0IPAddress": {
            "value": "[parameters('sql0IPAddress')]"
          },
          "sql1IPAddress": {
            "value": "[parameters('sql1IPAddress')]"
          },
          "sqlwIPAddress": {
            "value": "[parameters('sqlwIPAddress')]"
          },
          "sqlNSGid": {
            "value": "[variables('derivedIds').sqlNSG]"
          },
          "dcNSGid": {
            "value": "[variables('derivedIds').dcNSG]"
          },
          "mgtNICName": {
            "value": "[variables('resourceNames').nics.mgt]"
          },
          "mgtIPAddress": {
            "value": "[parameters('mgtIPAddress')]"
          },
          "mgtNSGid": {
            "value": "[variables('derivedIds').mgtNSG]"
          }
        }
      }
    },
    {
      "name": "ProvisioningVMsSQLADMGT",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ProvisioningNICsSQLADMGT"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('artifacts').provisioningVMsSQLADURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adPDCVMName": {
            "value": "[variables('resourceNames').vms.adpdc]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('resourceNames').availabilitySets.ad]"
          },
          "sqlAvailabilitySetName": {
            "value": "[variables('resourceNames').availabilitySets.sql]"
          },
          "sqlStorageAccountName": {
            "value": "[variables('resourceNames').storageAccounts.sql]"
          },
          "dcStorageAccountName": {
            "value": "[variables('resourceNames').storageAccounts.dc]"
          },
          "SqlStorageAccountType": {
            "value": "[parameters('sqlStorageAccountType')]"
          },
          "DcStorageAccountType": {
            "value": "[parameters('dcStorageAccountType')]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adVMSize": {
            "value": "[parameters('adVMSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adImagePublisher": {
            "value": "[variables('vmSettings').dc.imagePublisher]"
          },
          "adImageOffer": {
            "value": "[variables('vmSettings').dc.imageOffer]"
          },
          "adImageSKU": {
            "value": "[variables('vmSettings').dc.imageSKU]"
          },
          "vmContainerName": {
            "value": "[variables('vmSettings').vmContainerName]"
          },
          "adPDCNicName": {
            "value": "[variables('resourceNames').nics.adpdc]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adPDCConfigurationFunction": {
            "value": "[variables('artifacts').adPDCConfigurationFunction]"
          },
          "adPDCModulesURL": {
            "value": "[variables('artifacts').adPDCModulesURL]"
          },
          "adBDCVMName": {
            "value": "[variables('resourceNames').vms.adbdc]"
          },
          "adBDCNicName": {
            "value": "[variables('resourceNames').nics.adbdc]"
          },
          "sqlVMName": {
            "value": "[variables('resourceNames').vms.sql]"
          },
          "sqlVMSize": {
            "value": "[parameters('sqlVMSize')]"
          },
          "fswImagePublisher": {
            "value": "[variables('vmSettings').sqlw.imagePublisher]"
          },
          "fswImageOffer": {
            "value": "[variables('vmSettings').sqlw.imageOffer]"
          },
          "fswImageSKU": {
            "value": "[variables('vmSettings').sqlw.imageSKU]"
          },
          "sqlImagePublisher": {
            "value": "[variables('vmSettings').sql.imagePublisher]"
          },
          "sqlImageOffer": {
            "value": "[variables('vmSettings').sql.imageOffer]"
          },
          "sqlImageSKU": {
            "value": "[variables('vmSettings').sql.imageSKU]"
          },
          "mgtImagePublisher": {
            "value": "[variables('vmSettings').mgt.imagePublisher]"
          },
          "mgtImageOffer": {
            "value": "[variables('vmSettings').mgt.imageOffer]"
          },
          "mgtImageSKU": {
            "value": "[variables('vmSettings').mgt.imageSKU]"
          },
          "witnessVMSize": {
            "value": "[parameters('witnessVMSize')]"
          },
          "sqlwVMName": {
            "value": "[variables('resourceNames').vms.sqlw]"
          },
          "sqlwNicName": {
            "value": "[variables('resourceNames').nics.sqlw]"
          },
          "sql0NicName": {
            "value": "[variables('resourceNames').nics.sql0]"
          },
          "sql1NicName": {
            "value": "[variables('resourceNames').nics.sql1]"
          },
          "environmentPrefix": {
            "value": "[parameters('environmentPrefix')]"
          },
          "mgtVMName": {
            "value": "[variables('resourceNames').vms.mgt]"
          },
          "mgtStorageAccountName": {
            "value": "[variables('resourceNames').storageAccounts.mgt]"
          },
          "mgtStorageAccountType": {
            "value": "[parameters('mgtStorageAccountType')]"
          },
          "mgtVMSize": {
            "value": "[parameters('mgtVMSize')]"
          },
          "mgtNICName": {
            "value": "[variables('resourceNames').nics.mgt]"
          },
          "mgtIPAddress": {
            "value": "[parameters('mgtIPAddress')]"
          },
          "mgtSubnetRef": {
            "value": "[variables('derivedIds').mgtSubnet]"
          },
          "mgtNSGid": {
            "value": "[variables('derivedIds').mgtNSG]"
          },
          "updateVnetWithDNSTemplateURL": {
            "value": "[variables('artifacts').vnetwithDNSTemplateURL]"
          },
          "virtualNetworkNameWithSuffix": {
            "value": "[variables('resourceNames').virtualNetworkNameWithSuffix]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "adPDCNICIPAddress": {
            "value": "[parameters('adPDCNICIPAddress')]"
          },
          "adBDCNICIPAddress": {
            "value": "[parameters('adBDCNICIPAddress')]"
          },
          "adBDCConfigurationFunction": {
            "value": "[variables('artifacts').adBDCConfigurationFunction]"
          },
          "adBDCModulesURL": {
            "value": "[variables('artifacts').adBDCModulesURL]"
          },
          "configuringBackupADVMURL": {
            "value": "[variables('artifacts').configuringBackupADVMURL]"
          },
          "updateNicTemplateURL": {
            "value": "[variables('artifacts').nicTemplateURL]"
          },
          "sqlBEAddressPoolID": {
            "value": "[variables('derivedIds').sqlBEAddressPoolID]"
          },
          "sqlSubnetRef": {
            "value": "[variables('derivedIds').sqlSubnet]"
          }
        }
      }
    },
    {
      "name": "PreparingAlwaysOnSqlServer",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ProvisioningVMsSQLADMGT"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('artifacts').preparingAlwaysOnSqlServerURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlVMName": {
            "value": "[variables('resourceNames').vms.sql]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "sqlAOPrepareModulesURL": {
            "value": "[variables('artifacts').sqlAOPrepareModulesURL]"
          },
          "sqlAOPrepareConfigurationFunction": {
            "value": "[variables('artifacts').sqlAOPrepareConfigurationFunction]"
          },
          "sqlAOEPName": {
            "value": "[variables('vmSettings').sql.sqlAOEPName]"
          },
          "sqlServerServiceAccountUserName": {
            "value": "[parameters('sqlServerServiceAccountUserName')]"
          },
          "sqlServerServiceAccountPassword": {
            "value": "[parameters('sqlServerServiceAccountPassword')]"
          },
          "sharePath": {
            "value": "[variables('vmSettings').sql.sharePath]"
          },
          "adPDCVMName": {
            "value": "[variables('resourceNames').vms.adpdc]"
          },
          "sqlwVMName": {
            "value": "[variables('resourceNames').vms.sqlw]"
          },
          "fswModulesURL": {
            "value": "[variables('artifacts').fswModulesURL]"
          },
          "fswConfigurationFunction": {
            "value": "[variables('artifacts').fswConfigurationFunction]"
          },
          "autoPatchingDay": {
            "value": "[variables('vmSettings').sql.autoPatchingDay]"
          },
          "autoPatchingStartHour": {
            "value": "[variables('vmSettings').sql.autoPatchingStartHour]"
          },
          "autoPatchingEnable": {
            "value": "[variables('vmSettings').sql.autoPatchingEnable]"
          },
          "numberOfDisks": {
            "value": "[parameters('numberOfSqlVMDisks')]"
          },
          "workloadType": {
            "value": "[variables('vmSettings').sql.workloadType]"
          }
        }
      }
    },
    {
      "name": "ConfiguringAlwaysOn",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/PreparingAlwaysOnSqlServer"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('artifacts').configuringAlwaysOnURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlVMName": {
            "value": "[variables('resourceNames').vms.sql]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "sqlAOEPName": {
            "value": "[variables('vmSettings').sql.sqlAOEPName]"
          },
          "sqlServerServiceAccountUserName": {
            "value": "[parameters('sqlServerServiceAccountUserName')]"
          },
          "sqlServerServiceAccountPassword": {
            "value": "[parameters('sqlServerServiceAccountPassword')]"
          },
          "createClusterModulesURL": {
            "value": "[variables('artifacts').createClusterModulesURL]"
          },
          "createClusterConfigurationFunction": {
            "value": "[variables('artifacts').createClusterConfigurationFunction]"
          },
          "clusterName": {
            "value": "[variables('vmSettings').sql.clusterName]"
          },
          "sharePath": {
            "value": "[variables('vmSettings').sql.sharePath]"
          },
          "sqlAOAGName": {
            "value": "[variables('vmSettings').sql.sqlAOAGName]"
          },
          "sqlAOListenerName": {
            "value": "[variables('vmSettings').sql.sqlAOListenerName]"
          },
          "sqlAOListenerPort": {
            "value": "[variables('vmSettings').sql.sqlAOListenerPort]"
          },
          "sqlLBName": {
            "value": "[variables('lbSettings').sqlLBName]"
          },
          "sqlLBIPAddress": {
            "value": "[parameters('sqlLBIPAddress')]"
          },
          "adPDCVMName": {
            "value": "[variables('resourceNames').vms.adpdc]"
          },
          "sqlwVMName": {
            "value": "[variables('resourceNames').vms.sqlw]"
          },
          "numberOfDisks": {
            "value": "[parameters('numberOfSqlVMDisks')]"
          },
          "workloadType": {
            "value": "[variables('vmSettings').sql.workloadType]"
          }
        }
      }
    },
    {
      "name": "WebTier",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ConfiguringAlwaysOn"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('artifacts').provisioningAppVMsURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "numberOfWebInstances": {
            "value": "[variables('numberOfWebInstances')]"
          },
          "WebVMName": {
            "value": "[variables('resourceNames').vms.web]"
          },
          "MGTVMName": {
            "value": "[variables('resourceNames').vms.mgt]"
          },
          "WebAvailabilitySetName": {
            "value": "[variables('resourceNames').availabilitySets.web]"
          },
          "WebStorageAccountName": {
            "value": "[variables('resourceNames').storageAccounts.web]"
          },
          "MGTStorageAccountName": {
            "value": "[variables('resourceNames').storageAccounts.mgt]"
          },
          "webStorageAccountType": {
            "value": "[parameters('webStorageAccountType')]"
          },
          "mgtStorageAccountType": {
            "value": "[parameters('mgtStorageAccountType')]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "WebVMSize": {
            "value": "[parameters('webVMSize')]"
          },
          "MGTVMSize": {
            "value": "[parameters('mgtVMSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "appImagePublisher": {
            "value": "[variables('vmSettings').web.imagePublisher]"
          },
          "appImageOffer": {
            "value": "[variables('vmSettings').web.imageOffer]"
          },
          "appImageSKU": {
            "value": "[variables('vmSettings').web.imageSKU]"
          },
          "vmContainerName": {
            "value": "[variables('vmSettings').vmContainerName]"
          },
          "WEBNICName": {
            "value": "[variables('resourceNames').nics.web]"
          },
          "MGTNICName": {
            "value": "[variables('resourceNames').nics.mgt]"
          },
          "mgtIPAddress": {
            "value": "[parameters('mgtIPAddress')]"
          },
          "subnetRef": {
            "value": "[variables('derivedIds').webSubnet]"
          },
          "mgtSubnetRef": {
            "value": "[variables('derivedIds').mgtSubnet]"
          },
          "mgtNSGid": {
            "value": "[variables('derivedIds').mgtNSG]"
          },
          "webNSGid": {
            "value": "[variables('derivedIds').webNSG]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "iisModulesURL": {
            "value": "[variables('artifacts').iisModulesURL]"
          },
          "iisConfigurationFunction": {
            "value": "[variables('artifacts').iisConfigurationFunction]"
          },
          "staticIPWEBStart": {
            "value": "[variables('staticIPWEBStart')]"
          },
          "webSubnetAddressRange": {
            "value": "[parameters('webSubnet').properties.addressPrefix]"
          }
        }
      }
    },
    {
      "name": "RecoverServicesVault",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('artifacts').provisioningRCV]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
        }
      }
    }
  ]
}
